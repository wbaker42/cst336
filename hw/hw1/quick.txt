<!DOCTYPE html>
<html>
<!--

First Website
and comment
in html
(comments can span multiple lines)

-->

<!-- This is the head -->
<!-- All styles and javascript go inside the head -->
    <head>
		<meta char=”utf-8” />
		<title>Insertion Sort</title>
        <link href="css/styles.css" rel="stylesheet" type="text/css" />
		<link href="https://fonts.googleapis.com/css?family=Pacifico" rel="stylesheet">
    </head>
<!-- closing head -->

    <!-- This is the body -->
    <!-- This is where we place the content of our website -->
    <body>
        
        <header>
			<h1> Insertion Sort </h1>
		</header>
		<br>
		<nav>
			<a href="index.html">Home</a>
			<a href="insertion.html">Insertion Sort</a>
			<a href="bubble.html" id="currentPage">Bubble Sort</a>
			<a href="quick.html">Quick Sort</a>
		</nav>
		
		<br /><br />
		
		<main>
			<figure id="animation">
				<img src="images/bubble.gif" alt="Bubble Sort Animation"/>
			</figure>
			<table>
				<caption>Bubble Sort</caption>
				<tr id = "tableheader">
					<td>Type</td>
					<td>Stability</td>
					<td>Best Case</td>
					<td>Worst Case</td>
					<td>Average Case</td>
					
				</tr>
				<tr>
					<td>Comparison</td>
					<td>Stable</td>
					<td>O(n)</td>
					<td>O(n^2)</td>
					<td>O(n^2)</td>
				</tr>
			</table>
			<div id="description">
				<p>Bubble sort is another of the most intuitive sorting algorithms. It basically consists of iterating through pairs of elements in an array. It then swaps the elements
				in the pair if the first is greater than the second. This causes the largest values to "bubble" up to the end.This algorithm has the potential to be extremely efficient 
				at O(n) however this only occurs if the array is already close to being sorted. As a worst case, which is also its average case, it is O(n^2) which makes it slow in comparison
				to other algorithms. It is also a stable sort.</p>
			</div>
			</main>
        
    </body>
    <!-- closing body -->

</html>